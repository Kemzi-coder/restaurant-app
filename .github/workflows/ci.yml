name: CI Pipeline
on: [push]
jobs:
  pipeline:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:qwerty77@postgres:5432/restaurant?schema=public
    container: node:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: qwerty77
          POSTGRES_DB: restaurant
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Setup database
        run: npx prisma migrate deploy
      - name: Run tests
        run: npm test -- --reporter=html --outputFile=./reports/tests/index.html
      - name: Check code style
        run: npm run lint -- -f node_modules/eslint-html-reporter/reporter.js -o ./reports/lint/index.html
      - name: Upload lint and test results
        uses: actions/upload-artifact@v3
        with:
          name: ci-results
          path: ./reports/
  deploy:
    runs-on: ubuntu-latest
    needs: pipeline
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/restaurant-app:latest